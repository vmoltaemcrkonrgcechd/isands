definitions:
  entity.Detail:
    properties:
      detailName:
        type: string
      value:
        type: string
    type: object
  entity.DetailDTO:
    properties:
      detailID:
        type: string
      value:
        type: string
    type: object
  entity.DictionaryEntry:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  entity.DictionaryEntryDTO:
    properties:
      name:
        type: string
    type: object
  entity.Product:
    properties:
      categoryName:
        type: string
      colorName:
        type: string
      countryName:
        type: string
      details:
        items:
          $ref: '#/definitions/entity.Detail'
        type: array
      id:
        type: string
      inStock:
        type: boolean
      installmentPlan:
        type: boolean
      name:
        type: string
      online:
        type: boolean
      price:
        type: number
      supplierName:
        type: string
    type: object
  entity.ProductDTO:
    properties:
      categoryID:
        type: string
      colorID:
        type: string
      countryID:
        type: string
      details:
        items:
          $ref: '#/definitions/entity.DetailDTO'
        type: array
      inStock:
        type: boolean
      installmentPlan:
        type: boolean
      name:
        type: string
      online:
        type: boolean
      price:
        type: number
      supplierID:
        type: string
    type: object
info:
  contact: {}
paths:
  /category:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.DictionaryEntry'
            type: array
      tags:
      - категория
    post:
      parameters:
      - description: категория
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/entity.DictionaryEntryDTO'
      responses: {}
      tags:
      - категория
  /category/{id}:
    delete:
      parameters:
      - description: идентификатор
        in: path
        name: id
        required: true
        type: string
      responses: {}
      tags:
      - категория
    patch:
      parameters:
      - description: категория
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/entity.DictionaryEntryDTO'
      - description: идентификатор
        in: path
        name: id
        required: true
        type: string
      responses: {}
      tags:
      - категория
  /color:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.DictionaryEntry'
            type: array
      tags:
      - цвет
    post:
      parameters:
      - description: цвет
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/entity.DictionaryEntryDTO'
      responses: {}
      tags:
      - цвет
  /color/{id}:
    delete:
      parameters:
      - description: идентификатор
        in: path
        name: id
        required: true
        type: string
      responses: {}
      tags:
      - цвет
    patch:
      parameters:
      - description: цвет
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/entity.DictionaryEntryDTO'
      - description: идентификатор
        in: path
        name: id
        required: true
        type: string
      responses: {}
      tags:
      - цвет
  /country:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.DictionaryEntry'
            type: array
      tags:
      - страна
    post:
      parameters:
      - description: страна
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/entity.DictionaryEntryDTO'
      responses: {}
      tags:
      - страна
  /country/{id}:
    delete:
      parameters:
      - description: идентификатор
        in: path
        name: id
        required: true
        type: string
      responses: {}
      tags:
      - страна
    patch:
      parameters:
      - description: страна
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/entity.DictionaryEntryDTO'
      - description: идентификатор
        in: path
        name: id
        required: true
        type: string
      responses: {}
      tags:
      - страна
  /detail:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.DictionaryEntry'
            type: array
      tags:
      - деталь
    post:
      parameters:
      - description: деталь
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/entity.DictionaryEntryDTO'
      responses: {}
      tags:
      - деталь
  /product:
    get:
      parameters:
      - description: название продукта
        in: query
        name: name
        type: string
      - description: идентификатор страны, разделенный запятыми
        in: query
        name: countryID
        type: string
      - description: идентификатор поставщика, разделенный запятыми
        in: query
        name: supplierID
        type: string
      - description: идентификатор категории, разделенный запятыми
        in: query
        name: categoryID
        type: string
      - description: идентификатор цвета, разделенный запятыми
        in: query
        name: colorID
        type: string
      - description: 'сортировка: name,price: name,desc/name,asc'
        in: query
        name: orderBy
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Product'
            type: array
      tags:
      - продукт
    post:
      parameters:
      - description: продукт
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/entity.ProductDTO'
      responses: {}
      tags:
      - продукт
  /supplier:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.DictionaryEntry'
            type: array
      tags:
      - поставщик
    post:
      parameters:
      - description: поставщик
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/entity.DictionaryEntryDTO'
      responses: {}
      tags:
      - поставщик
  /supplier/{id}:
    delete:
      parameters:
      - description: идентификатор
        in: path
        name: id
        required: true
        type: string
      responses: {}
      tags:
      - поставщик
    patch:
      parameters:
      - description: поставщик
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/entity.DictionaryEntryDTO'
      - description: идентификатор
        in: path
        name: id
        required: true
        type: string
      responses: {}
      tags:
      - поставщик
swagger: "2.0"
